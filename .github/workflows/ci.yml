name: CI
on:
  push:
  pull_request:

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: raincast
        ports: ["5432:5432"]
        options: >-
          --health-cmd="pg_isready -U ${{ secrets.DB_USER }}"
          --health-interval=5s
          --health-timeout=5s
          --health-retries=20

    env:
      DJANGO_SETTINGS_MODULE: config.settings

      DB_ENGINE: ${{ secrets.DB_ENGINE }}
      DB_NAME: ${{ secrets.DB_NAME }}
      DB_USER: ${{ secrets.DB_USER }}
      DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
      DB_HOST: ${{ secrets.DB_HOST }}
      DB_PORT: ${{ secrets.DB_PORT }}
      WEATHER_API_KEY: ${{ secrets.WEATHER_API_KEY }}

      PIP_DISABLE_PIP_VERSION_CHECK: 1
      PYTHONDONTWRITEBYTECODE: 1

    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Cache pip
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: pip-${{ runner.os }}-${{ hashFiles('**/requirements*.txt') }}
          restore-keys: |
            pip-${{ runner.os }}-

      - name: Install dependencies
        run: pip install -r requirements.txt

      - name: Django check & migrate
        run: |
          python manage.py check
          python manage.py migrate --noinput

      - name: Run tests
        run: pytest -q
